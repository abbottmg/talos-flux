---
apiVersion: cilium.io/v2alpha1
kind: CiliumBGPClusterConfig
metadata:
  name: cilium-bgp
spec:
  nodeSelector:
    matchLabels:
      topology.kubernetes.io/zone: amarillo
      topology.rook.io/datacenter: "1"
  bgpInstances:
  - name: "instance-1101"
    localASN: 1101
    peers:
    - name: "peer-100-calcite"
      peerASN: 100
      peerAddress: 192.168.100.10
      peerConfigRef:
        name: "cilium-peer"
    - name: "peer-100-lazulite"
      peerASN: 100
      peerAddress: 192.168.100.20
      peerConfigRef:
        name: "cilium-peer"
    - name: "peer-100-pyrite"
      peerASN: 100
      peerAddress: 192.168.100.30
      peerConfigRef:
        name: "cilium-peer"
---
apiVersion: cilium.io/v2alpha1
kind: CiliumBGPPeerConfig
metadata:
  name: cilium-peer
spec:
  timers:
    holdTimeSeconds: 9
    keepAliveTimeSeconds: 3
  gracefulRestart:
    enabled: true
    restartTimeSeconds: 15
  families:
    - afi: ipv4
      safi: unicast
      advertisements:
        matchLabels:
          advertise: "bgp"
---
apiVersion: cilium.io/v2alpha1
kind: CiliumBGPNodeConfigOverride
metadata:
  name: calcite
spec:
  bgpInstances:
    - name: "instance-1101"
      routerID: "192.168.200.10"
      peers:
      - name: "peer-100-calcite"
        localAddress: 192.168.100.14
---
apiVersion: cilium.io/v2alpha1
kind: CiliumBGPNodeConfigOverride
metadata:
  name: lazulite
spec:
  bgpInstances:
    - name: "instance-1101"
      routerID: "192.168.200.20"
      peers:
      - name: "peer-100-calcite"
        localAddress: 192.168.100.24
---
apiVersion: cilium.io/v2alpha1
kind: CiliumBGPNodeConfigOverride
metadata:
  name: pyrite
spec:
  bgpInstances:
    - name: "instance-1101"
      routerID: "192.168.200.30"
      peers:
      - name: "peer-100-calcite"
        localAddress: 192.168.100.34
---
apiVersion: cilium.io/v2alpha1
kind: CiliumBGPAdvertisement
metadata:
  name: bgp-advertisements
  labels:
    advertise: bgp
spec:
  advertisements:
    - advertisementType: PodCIDR
    - advertisementType: Service
      service:
        addresses:
        - ClusterIP
        - ExternalIP
        - LoadBalancerIP
      selector:             # <-- select all services
        matchExpressions:
         - {key: none-key, operator: NotIn, values: ['never-used-value']}
         # TODO: add appropriate key for flagging services to advertise once ready to deploy
---
apiVersion: "cilium.io/v2alpha1"
kind: CiliumLoadBalancerIPPool
metadata:
  name: "lb-mark"
spec:
  blocks:
  - cidr: 10.96.1.0/24 # maybe expand to start: 1.0 end 7.0
---
apiVersion: "cilium.io/v2alpha1"
kind: CiliumLoadBalancerIPPool
metadata:
  name: "lb-mina"
spec:
  blocks:
  - cidr: 10.96.8.0/24 # maybe expand 8.0/21

#TODO: additional pool names: talent, troy, drachma, tod, duella, candy, tank, arroba
